/*
.include "test2.sico"


.define NL 10
.define EXIT -1
.define PUTC -2


            jump(start)


t0: 0
t1: 0


start:
            givz() giv2(NL) ?+1
            clear(0)
            nop()
            clear(2)
            nop2()
            jump(start)


.macro giv(x) {
    x
}

.macro givz {
    giv2(0)
}

.macro giv2(y) { giv(y) }

.macro jump(x) {
    t0 t0 x
}

.macro clear(x) {
    .repeat 2 { x } ?+1
}

.macro nop {
    t0 t0 l0
l0:
}

.macro nop2 {
    t1 t1 l0
l0:
}
*/


/*
.macro resx(x) {
    .repeat 2 {
        .res 2, 1 << x
        .res 2, 2 << x
    }
}

resx(1)
resx(2)
*/


.macro jump(addr) {
            t0 t0 addr
}

.macro clear(addr) {
            addr addr ?+1
}

.macro set(a, b) {
            clear(t0)
            t0 b ?+1
            clear(a)
            a t0 ?+1
}

.macro sble(a, b, c) {
            a b
            .ifnblank c c .else ?+1
}

            0 0 start

z:          0
t0:         0

text:       "Hello, World!\n"
len:        ?-text
neg:        -1
one:        1

tstart:     text
left:       len-text

start:
loop:       sble(-1, text)
            left one restart
            ?-5 neg loop

restart:    set(loop+1, tstart)
            set(left, len)
            jump(loop)





